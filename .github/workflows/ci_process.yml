name: Django CI TEst

on: [pull_request]

env:
  TEST_GITHUB_CI: 1
  DEBUG: 0
  DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 0.0.0.0 django
  SITE_ID: 1
  SECRET_KEY: ^l)7d*%h&db4uft@dk%h-w&nup#pu%)a!d)c7jwgoixo5_hm0$
  PIP_CACHE_DIR: "/.cache/pip"


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: debug
          MYSQL_DATABASE: linkshortener
        ports: ['3306:3306']
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ['6379:6379']
        env:
          ALLOW_EMPTY_PASSWORD: yes
          REDIS_PORT: 6379
      rabbitmq:
        image: rabbitmq:latest
        env:
          RABBITMQ_USER: admin
          RABBITMQ_PASS: mypass
          AMQP_URL: 'amqp://admin:admin@127.0.0.1:5672'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-django
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          exclude: |
            "__init__.py"
            "migrations"
            "settings.py"
          max-line-length: "120"

      # - name: Run Unit Tests
      #   env:
      #     ENGINE: django.db.backends.mysql
      #     MYSQL_DATABASE: linkshortener
      #     MYSQL_NAME: root
      #     MYSQL_PASS: debug
      #     MYSQL_HOST: 127.0.0.1
      #     DPORT: ${{ job.services.mysql.ports[3306] }}
      #     ALLOW_EMPTY_PASSWORD: yes
      #   run: |
      #     cd apps/
      #     python manage.py migrate
      #     python manage.py test